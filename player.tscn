[gd_scene load_steps=54 format=3 uid="uid://ds1itpob76efe"]

[ext_resource type="Texture2D" uid="uid://dy0vn31vj4r56" path="res://Sprites copy/Idle.png" id="1_a23g7"]
[ext_resource type="Texture2D" uid="uid://b3wx451d28qdj" path="res://Sprites copy/Attack1.png" id="1_gbc4x"]
[ext_resource type="Texture2D" uid="uid://c26252n1k5nmx" path="res://Sprites copy/Jump.png" id="2_3r8q2"]
[ext_resource type="Texture2D" uid="uid://cupt7hgvjhaeq" path="res://Sprites copy/Attack2.png" id="2_4lm6s"]
[ext_resource type="Texture2D" uid="uid://l28n7ucfwpyn" path="res://Sprites copy/Run.png" id="2_42hq4"]
[ext_resource type="Texture2D" uid="uid://cffqm3hl7vn60" path="res://Sprites copy/Fall.png" id="3_l1lpf"]
[ext_resource type="Texture2D" uid="uid://cxwkp128fpxdw" path="res://Sprites copy/Death.png" id="3_r0xu6"]
[ext_resource type="Texture2D" uid="uid://c3wrs3apbahku" path="res://Sprites copy/Take hit.png" id="8_6dj5s"]

[sub_resource type="GDScript" id="GDScript_k3hrk"]
resource_name = "player.gd"
script/source = "extends CharacterBody2D

@export var speed: float = 200.0
@export var jump_velocity: float = -150.0
@export var double_jump_velocity: float = -150
@export var attack_cooldown: float = 0.5
@export var max_health: int = 100

var last_attack_was_1: bool = false
var is_dead: bool = false
var current_health: int = max_health
var has_double_jumped: bool = false
var animation_locked: bool = false
var direction: Vector2 = Vector2.ZERO
var was_in_air: bool = false
var can_attack: bool = true
var is_attacking: bool = false
var is_knockbacked: bool = false
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
var attack_type: String = \"\"
@onready var animated_sprite: AnimatedSprite2D = $AnimatedSprite2D
@onready var deal_damage_zone = $DealDamage
@onready var damage_shape: CollisionShape2D = $DealDamage/CollisionShape2D

# Frames when damage is active for each attack
var attack_hit_frames = {
	\"attack1\": [2, 3], # Example: frame 3 and 4 active
	\"attack2\": [2, 3],
	\"special_attack\": [1, 5]
}
var health=100
var min_health=0
var can_take_damage:bool
func _ready():
	Global.playerBody = self
	Global.playerAlive = true
	is_dead = false
	can_take_damage = true
	animated_sprite.connect(\"frame_changed\", Callable(self, \"_on_frame_changed\"))

func set_idle_state():
	# When the player dies or the game is over, play idle animation
	if not is_dead:
		animated_sprite.play(\"idle\")

func _physics_process(delta: float) -> void:
	if not Global.game_started:
		return
	Global.playerDamageZone = deal_damage_zone
	if is_dead:
		return

	if not is_on_floor():
		velocity += get_gravity() * delta
		was_in_air = true
	else:
		has_double_jumped = false
		if was_in_air:
			land()
			was_in_air = false

	if Input.is_action_just_pressed(\"jump_start\") and not is_attacking:
		if is_on_floor():
			jump()
		elif not has_double_jumped:
			double_jump()
	if Input.is_action_just_pressed(\"special_attack\") and can_attack and not is_attacking:
		special_attack()
	if Input.is_action_just_pressed(\"attack1\") and can_attack and not is_attacking:
		if last_attack_was_1:
			attack2()
		else:
			attack1()
		last_attack_was_1 = !last_attack_was_1

	if not is_attacking and not animation_locked and not is_knockbacked:
		direction = Input.get_vector(\"left\", \"right\", \"up\", \"down\")
		if direction.x != 0 and animated_sprite.animation != \"jump_end\":
			velocity.x = direction.x * speed
		else:
			velocity.x = move_toward(velocity.x, 0, speed)
	elif is_knockbacked:
		velocity.x = move_toward(velocity.x, 0, speed * delta * 2)
	check_hitBox()
	move_and_slide()
	update_animation()
	update_facing_direction()

	
func _on_frame_changed():
	var anim = animated_sprite.animation
	var frame = animated_sprite.frame
	
	if is_attacking and anim in attack_hit_frames:
		var active_frames = attack_hit_frames[anim]
		if frame in active_frames:
			damage_shape.disabled = false
		else:
			damage_shape.disabled = true
	else:
		damage_shape.disabled = true
		
func check_hitBox():
	var hitbox_area=$PlayerHitBox.get_overlapping_areas()
	var damage:int
	if hitbox_area:
		var hitBox=hitbox_area.front()
		if hitBox.get_parent() is AICharacter or AI2:
			damage=Global.AiDamageAmount
			
	if can_take_damage:
		take_damage(damage)

func take_damage(damage):

	if damage!=0:
		if health>0:
			take_hit()
			health-=damage
			print(\"Player Health: \",health)
			if health<=0:
				health=0
				is_dead=true
				Global.playerAlive=false
				die()
			take_damage_cooldown(1.0)
func die():
	animated_sprite.play(\"death\")
	await get_tree().create_timer(3.5).timeout
	self.queue_free()
	
	get_tree().reload_current_scene()
				
func take_damage_cooldown(wait_time):
	can_take_damage=false
	await get_tree().create_timer(wait_time).timeout
	can_take_damage=true
	

		
func update_animation():
	if not animation_locked:
		if is_attacking:
			return
		elif not is_on_floor():
			animated_sprite.play(\"jump_loop\")
		elif direction.x != 0:
			animated_sprite.play(\"run\")
		else:
			animated_sprite.play(\"idle\")

func update_facing_direction():
	if direction.x > 0:
		animated_sprite.flip_h = false
		deal_damage_zone.scale.x = 1
	elif direction.x < 0:
		animated_sprite.flip_h = true
		deal_damage_zone.scale.x = -1

func jump():
	velocity.y = jump_velocity
	animated_sprite.play(\"jump_start\")
	animation_locked = true

func double_jump():
	velocity.y = double_jump_velocity
	animated_sprite.play(\"jump_double\")
	animation_locked = true
	has_double_jumped = true

func land():
	animated_sprite.play(\"jump_end\")
	animation_locked = true

func attack1() -> void:
	is_attacking = true
	can_attack = false
	animation_locked = true
	attack_type = \"attack1\"
	animated_sprite.play(\"attack1\")
	set_damage(attack_type)

	await animated_sprite.animation_finished

	can_attack = true
	is_attacking = false
	animation_locked = false

func attack2() -> void:
	is_attacking = true
	can_attack = false
	animation_locked = true
	attack_type = \"attack2\"
	animated_sprite.play(\"attack2\")
	set_damage(attack_type)

	await animated_sprite.animation_finished

	can_attack = true
	is_attacking = false
	animation_locked = false
func special_attack() -> void:
	is_attacking = true
	can_attack = false
	animation_locked = true
	attack_type = \"special_attack\"
	animated_sprite.play(\"special_attack\")
	set_damage(attack_type)

	await animated_sprite.animation_finished

	can_attack = true
	is_attacking = false
	animation_locked = false
func toggle_damage_collision(attack: String) -> void:
	var damage_zone_collision = deal_damage_zone.get_node(\"CollisionShape2D\")
	var wait_time : float
	if attack == \"attack1\":
		wait_time=.4
	elif attack==\"attack2\":
		wait_time=.4
	damage_zone_collision.disabled=false
	await get_tree().create_timer(wait_time).timeout
	damage_zone_collision.disabled=true

		
func take_hit() -> void:
	if animation_locked:
		return

	is_attacking = false
	can_attack = false
	animation_locked = true
	animated_sprite.play(\"takeHit\")

	animated_sprite.modulate = Color(1, 0.2, 0.2)
	await get_tree().create_timer(0.1).timeout
	animated_sprite.modulate = Color(1, 1, 1)
	var dir = animated_sprite.flip_h if animated_sprite.flip_h else -1
	apply_knockback(dir)

	await animated_sprite.animation_finished
	can_attack = true
	animation_locked = false




func _on_animated_sprite_2d_animation_finished():
	if [\"jump_end\", \"jump_start\", \"jump_double\", \"fall\", \"takeHit\"].has(animated_sprite.animation):
		animation_locked = false
	elif [\"attack1\", \"attack2\"].has(animated_sprite.animation):
		is_attacking = false
		animation_locked = false
	elif animated_sprite.animation == \"death\":
		pass
func apply_knockback(direction: int) -> void:
	var force = 300.0
	velocity.x = force * direction
	is_knockbacked = true
	await get_tree().create_timer(0.2).timeout
	is_knockbacked = false
	
func set_damage(attack_type):
	var current_damage_to_deal:int
	if attack_type==\"attack1\":
		current_damage_to_deal=8
	elif attack_type==\"attack2\":
		current_damage_to_deal=10
	elif attack_type == \"special_attack\":
		current_damage_to_deal = 12
	Global.playerDamageAmount = current_damage_to_deal
	
func get_direction() -> Vector2:
	return Vector2(
		Input.get_action_strength(\"right\") - Input.get_action_strength(\"left\"),
		Input.get_action_strength(\"down\") - Input.get_action_strength(\"up\")
	)
"

[sub_resource type="AtlasTexture" id="AtlasTexture_f3r7p"]
atlas = ExtResource("1_gbc4x")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_82gjj"]
atlas = ExtResource("1_gbc4x")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_fwjb0"]
atlas = ExtResource("1_gbc4x")
region = Rect2(400, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_7q66e"]
atlas = ExtResource("1_gbc4x")
region = Rect2(600, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_535me"]
atlas = ExtResource("2_4lm6s")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_xwuvi"]
atlas = ExtResource("2_4lm6s")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_yifyp"]
atlas = ExtResource("2_4lm6s")
region = Rect2(400, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_wxodl"]
atlas = ExtResource("2_4lm6s")
region = Rect2(600, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_tcwfc"]
atlas = ExtResource("3_r0xu6")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_vqvgc"]
atlas = ExtResource("3_r0xu6")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_g3wkd"]
atlas = ExtResource("3_r0xu6")
region = Rect2(400, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_2e5qg"]
atlas = ExtResource("3_r0xu6")
region = Rect2(600, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_mcsfj"]
atlas = ExtResource("3_r0xu6")
region = Rect2(800, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_7a4eu"]
atlas = ExtResource("3_r0xu6")
region = Rect2(1000, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_dqe2v"]
atlas = ExtResource("3_r0xu6")
region = Rect2(1200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_lkmrg"]
atlas = ExtResource("1_a23g7")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_7830m"]
atlas = ExtResource("1_a23g7")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_lill7"]
atlas = ExtResource("1_a23g7")
region = Rect2(400, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_p1ulr"]
atlas = ExtResource("1_a23g7")
region = Rect2(600, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_sgfj1"]
atlas = ExtResource("2_3r8q2")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_upws8"]
atlas = ExtResource("3_l1lpf")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_yymx5"]
atlas = ExtResource("3_l1lpf")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_rkv5g"]
atlas = ExtResource("3_l1lpf")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_xw1s7"]
atlas = ExtResource("3_l1lpf")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_4x3l2"]
atlas = ExtResource("2_3r8q2")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_pd8o8"]
atlas = ExtResource("2_3r8q2")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_tmyxo"]
atlas = ExtResource("2_42hq4")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_f2xw6"]
atlas = ExtResource("2_42hq4")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_ifigv"]
atlas = ExtResource("2_42hq4")
region = Rect2(400, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_hyqgq"]
atlas = ExtResource("2_42hq4")
region = Rect2(600, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_j8x5m"]
atlas = ExtResource("1_gbc4x")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_f1icc"]
atlas = ExtResource("1_gbc4x")
region = Rect2(400, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_02av3"]
atlas = ExtResource("1_gbc4x")
region = Rect2(600, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_4rml8"]
atlas = ExtResource("2_4lm6s")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_a1d4o"]
atlas = ExtResource("2_4lm6s")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_s1v2u"]
atlas = ExtResource("2_4lm6s")
region = Rect2(400, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_hrk4a"]
atlas = ExtResource("2_4lm6s")
region = Rect2(600, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_yu4es"]
atlas = ExtResource("8_6dj5s")
region = Rect2(0, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_5q7aa"]
atlas = ExtResource("8_6dj5s")
region = Rect2(200, 0, 200, 200)

[sub_resource type="AtlasTexture" id="AtlasTexture_iwn3p"]
atlas = ExtResource("8_6dj5s")
region = Rect2(400, 0, 200, 200)

[sub_resource type="SpriteFrames" id="SpriteFrames_b454s"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_f3r7p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_82gjj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fwjb0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7q66e")
}],
"loop": false,
"name": &"attack1",
"speed": 10.0
}, {
"frames": [{
"duration": 0.05,
"texture": SubResource("AtlasTexture_535me")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xwuvi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yifyp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wxodl")
}],
"loop": false,
"name": &"attack2",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_tcwfc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vqvgc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g3wkd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2e5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mcsfj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7a4eu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dqe2v")
}],
"loop": false,
"name": &"death",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_lkmrg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7830m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lill7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_p1ulr")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_sgfj1")
}],
"loop": false,
"name": &"jump_double",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_upws8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yymx5")
}],
"loop": false,
"name": &"jump_end",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_rkv5g")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xw1s7")
}],
"loop": true,
"name": &"jump_loop",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_4x3l2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pd8o8")
}],
"loop": false,
"name": &"jump_start",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_tmyxo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_f2xw6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ifigv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hyqgq")
}],
"loop": true,
"name": &"run",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_j8x5m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_f1icc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_02av3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4rml8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a1d4o")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_s1v2u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hrk4a")
}],
"loop": false,
"name": &"special_attack",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_yu4es")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5q7aa")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_iwn3p")
}],
"loop": false,
"name": &"takeHit",
"speed": 5.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_tokxn"]
radius = 7.0
height = 50.0

[sub_resource type="CircleShape2D" id="CircleShape2D_hmesc"]
radius = 15.0333

[sub_resource type="CircleShape2D" id="CircleShape2D_lkhbe"]
radius = 16.0

[node name="player" type="CharacterBody2D"]
script = SubResource("GDScript_k3hrk")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_b454s")
animation = &"special_attack"
autoplay = "idle"
frame = 6
frame_progress = 1.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(2, 3)
shape = SubResource("CapsuleShape2D_tokxn")

[node name="DealDamage" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="DealDamage"]
position = Vector2(49, 4)
shape = SubResource("CircleShape2D_hmesc")
disabled = true

[node name="PlayerHitBox" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="PlayerHitBox"]
position = Vector2(0, 3)
shape = SubResource("CircleShape2D_lkhbe")

[connection signal="animation_finished" from="AnimatedSprite2D" to="." method="_on_animated_sprite_2d_animation_finished"]
